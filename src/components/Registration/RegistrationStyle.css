/* Registartion Style */

.registartionWrapper {
  background-image: url("../../images/pexels-photo-189349.webp");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  z-index: -1;
  padding-bottom: 5rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.registrationLogo {
  padding-top: 2rem;
  text-align: center;
}

.registrationInner {
  min-width: 30%;
  margin: auto;
  background-color: rgba(237, 234, 220, 0.6);
  border: 1px solid var(--navBackgroundColor);
  box-shadow: 5px 5px 20px var(--navBackgroundColor);
  border-radius: 5px;
  padding: 3rem;
  margin-top: 3rem;
}

.registrationText {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.registrationLink {
  color: var(--fontColorDark);
  font-size: 1.2rem;
  transition: all 0.4s linear;
}

.registrationLink:hover {
  color: var(--navSeparatorColor);
  transform: scale(1.5);
}

.registrationForm {
  display: flex;
  flex-direction: column;
}

.passwordWrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.registrationForm .customChekbox {
  display: flex; /* Use Flexbox for checkbox alignment */
  align-items: center; /* Align checkbox and text vertically */
  cursor: pointer;
}

.registrationForm .customChekbox input[type="checkbox"] {
  width: 35px;
  height: 35px;
  display: none;
  cursor: pointer;
}

.registrationForm .customChekbox .check {
  position: relative; /* Use relative positioning for the checkbox container */
  width: 35px;
  height: 35px;
  border: 2px solid var(--formBorderColor); /* Set the border color to pink */
  border-radius: 4px;
  background-color: white;
  margin-right: 0.5rem;
}

/* Style the checked state of the custom checkbox */
.registrationForm .customChekbox input[type="checkbox"]:checked + .check {
  background-color: white; /* Set the background color to white when checked */
}

/* Style the custom checkbox's checkmark */
.registrationForm
  .customChekbox
  input[type="checkbox"]:checked
  + .check::after {
  content: "âœ”"; /* Use checkmark character as content */
  font-size: 2rem;
  color: var(--fontColorDark); /* Set the checkmark color to pink */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Account Page */

.accountPagePara {
  font-size: 1.8rem;
}

.profilePageWrapper {
  display: flex;
  align-items: center;
  gap: 3rem;
  width: 80%;
  margin-top: 1rem;
}

.userPostsFeed {
  flex: 60%;
  min-width: 60%;
}

.profilePageInner {
  flex: 40%;
  width: 40%;
  background-color: rgba(237, 234, 220, 0.6);
  border: 1px solid var(--navBackgroundColor);
  box-shadow: 5px 5px 20px var(--navBackgroundColor);
  border-radius: 5px;
  padding: 2rem;
}

.userPostsPara {
  color: white;
  font-size: 1.2rem;
}

.userPostsLink {
  color: var(--fontColorLight);
  transition: all 0.4s linear;
}

.userPostsLink:hover {
  transform: scale(1.4);
}

@media (min-width: 1501px) and (max-width: 1700px) {
  .profilePageWrapper {
    width: 90%;
  }
}

@media (min-width: 920px) and (max-width: 1500px) {
  .profilePageWrapper {
    width: 90%;
  }
}

@media (max-width: 920px) {
  .profilePageWrapper {
    flex-direction: column;
    align-items: center;
    gap: 0;
    width: 90%;
  }
  .profilePageInner {
    flex: 100%;
    width: 100%;
    padding: 1rem;
  }
  .userPostsFeed {
    flex: 100%;
    min-width: 100%;
  }
}

/* Missing Page */

.missingPagePara {
  font-size: 2.2rem;
  margin: 0;
  text-align: center;
}

.missingPageParaLink {
  text-align: center;
}
.missingPageLink {
  color: var(--fontColorDark);
}

@media (max-width: 576px) {
  .registrationInner {
    min-width: 100%;
    border: none;
    border-radius: 0;
    padding: 3rem 1rem;
  }
  .registrationLogo {
    padding-top: 0rem;
  }
  .missingPagePara {
    font-size: 1.8rem;
    margin: 0;
    text-align: center;
  }
}
